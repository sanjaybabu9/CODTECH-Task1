import re

def password_strength(password):
    score = 0
    feedback = []

    # Length check
    if len(password) >= 12:
        score += 2
        feedback.append("Good length (12 or more characters).")
    elif len(password) >= 8:
        score += 1
        feedback.append("Okay length (8-11 characters), but longer is better.")
    else:
        feedback.append("Too short (less than 8 characters).")
    # Upper and lowercase letters check
    if re.search(r'[A-Z]', password) and re.search(r'[a-z]', password):
        score += 1
        feedback.append("Good mix of uppercase and lowercase letters.")
    else:
        feedback.append("Add both uppercase and lowercase letters.")

    # Numbers check
    if re.search(r'[0-9]', password):
        score += 1
        feedback.append("Contains numbers.")
    else:
        feedback.append("Add numbers for increased security.")

    # Special characters check
    if re.search(r'[@$!%*?&]', password):
        score += 1
        feedback.append("Contains special characters.")
    else:
        feedback.append("Add special characters for more complexity.")

    # Common patterns and uniqueness check (simplified for demonstration)
    common_patterns = ["123", "password", "qwerty", "letmein"]
    if any(pattern in password.lower() for pattern in common_patterns):
        feedback.append("Avoid common words or patterns (e.g., '123', 'password').")
    else:
        score += 1

    # Strength assessment based on the score
    if score >= 6:
        strength = "Strong"
    elif score >= 4:
        strength = "Medium"
    else:
        strength = "Weak"

    return {"strength": strength, "feedback": feedback}

# Example usage:
password = input("Enter your password: ")
result = password_strength(password)

print("Password Strength:", result["strength"])
print("Feedback:")
for comment in result["feedback"]:
    print("-", comment)
